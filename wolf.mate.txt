def mate():

  if self.sex == "male" and self.alive == 1 and self.foundMate != 1:
    print
    print self.name + " is looking for a mate:"
    #iterates through all wolves, finding females, then computes distance to each.
    for wolf as Wolf in self.model.wolves:

      #cycles through female wolves as long as this wolf doesn't have a mate... and it ignores females with mates
      if wolf.sex == "female" and wolf.alive == 1 and self.foundMate != 1 and wolf.foundMate != 1:

        #get both wolf coordinates (x, y)
        selfCoor = self.the_geom.coordinate
        selfX = selfCoor.x
        selfY = selfCoor.y

        wolfCoor = wolf.the_geom.coordinate
        wolfX = wolfCoor.x
        wolfY = wolfCoor.y

        #compute distance between two wolves
        dist = Math.sqrt(Math.pow((wolfX-selfX),2) + Math.pow((wolfY-selfY), 2))
        intDist = int(dist)

        print wolf.name + " " + wolf.sex + " at " + wolfX, wolfY + ", a distance of: " + intDist

        #check if wolf is within mate search radius (default of 5000m)
        if intDist < self.model.mateSearchRadius:

          #if wolves are close enough, draw random to see if they do based on mate probability
          randomDraw = Random.uniform.nextDoubleFromTo(0,1)
          print randomDraw
          print self.model.mateProbability
          if randomDraw < self.model.mateProbability:

            #if so, wolves mate
            self.foundMate = 1
            self.mateName = wolf.name
            wolf.foundMate = 1
            wolf.mateName = self.name
            print
            print "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!BOW CHICA BOW WOW!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            print self.name + " and " + wolf.name + " find each other and decide to mate"
            print "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            print
